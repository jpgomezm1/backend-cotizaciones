// src/scripts/testSetup.ts
import dotenv from 'dotenv';
import { db } from '../db/connection';
import { organizations, templates } from '../db/schema';
import * as fs from 'fs';
import * as path from 'path';
import { eq } from 'drizzle-orm';

dotenv.config();

async function setupTestData() {
  try {
    console.log('üîß Configurando datos de prueba...');

    // Leer el template HTML completo
    const templatePath = path.join(__dirname, '../../paste2.txt');
    let htmlContent: string;
    
    try {
      htmlContent = fs.readFileSync(templatePath, 'utf8');
      console.log('üìÑ Template HTML le√≠do exitosamente, tama√±o:', htmlContent.length, 'caracteres');
    } catch (error) {
      console.error('‚ùå No se pudo leer paste2.txt desde:', templatePath);
      console.error('   Aseg√∫rate de que el archivo paste2.txt existe en la ra√≠z del proyecto');
      throw error;
    }

    // Buscar organizaci√≥n existente o crear una nueva
    let org = await db.query.organizations.findFirst({
      where: eq(organizations.clerkOrgId, 'test_org_123')
    });

    if (org) {
      console.log('‚úÖ Organizaci√≥n existente encontrada:', org.id);
    } else {
      [org] = await db.insert(organizations).values({
        name: 'Organizaci√≥n de Prueba',
        clerkOrgId: 'test_org_123'
      }).returning();
      console.log('‚úÖ Nueva organizaci√≥n creada:', org.id);
    }

    // Crear nuevo template con timestamp para evitar duplicados
    const timestamp = new Date().toISOString().slice(0, 19).replace(/:/g, '-');
    const [template] = await db.insert(templates).values({
      organizationId: org.id,
      name: `Template Irrelevant - MCP Server (${timestamp})`,
      htmlContent: htmlContent
    }).returning();

    console.log('‚úÖ Template creado:', template.id);
    console.log('üìù Template ID para usar en pruebas:', template.id);
    console.log('üìè Tama√±o del template guardado:', template.htmlContent.length, 'caracteres');

    // Verificar que el template se guard√≥ correctamente
    if (template.htmlContent.length < 10000) {
      console.warn('‚ö†Ô∏è  El template parece ser muy peque√±o. Verifica que paste2.txt tenga el contenido completo.');
    }

    return { orgId: org.id, templateId: template.id };
  } catch (error) {
    console.error('‚ùå Error en setup:', error);
    throw error;
  }
}

setupTestData()
  .then((result) => {
    console.log('üéâ Setup completado exitosamente');
    console.log('üìã Usar este Template ID en las pruebas:', result.templateId);
    process.exit(0);
  })
  .catch((error) => {
    console.error('üí• Error en setup:', error);
    process.exit(1);
  });